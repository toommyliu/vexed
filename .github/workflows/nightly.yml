name: Nightly Build

on:
  schedule:
    # Run at 12:00 AM UTC (00:00)
    - cron: '0 0 * * *'
  # Optional: Allow manual triggering of the workflow
  workflow_dispatch:

concurrency:
  group: nightly
  cancel-in-progress: true

jobs:
  check_recent_commit:
    runs-on: ubuntu-latest
    name: Check Recent Commit
    outputs:
      should_run: ${{ steps.should_run.outputs.should_run }}
    steps:
      - uses: actions/checkout@v4

      - id: should_run
        name: Check if latest commit date is within the previous 24 hours
        run: |
          if [ -z "$(git rev-list --since="24 hours ago" --all)" ]; then
            echo "should_run=false" >> $GITHUB_OUTPUT
          else
            echo "should_run=true" >> $GITHUB_OUTPUT
          fi

  build_electron:
    name: Build Electron App
    runs-on: macos-14
    needs: check_recent_commit
    if: needs.check_recent_commit.outputs.should_run == 'true'
    outputs:
      short_sha: ${{ steps.var.outputs.short_sha }}
      full_sha: ${{ steps.var.outputs.full_sha }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Yarn
        uses: threeal/setup-yarn-action@v2.0.0
        with:
          version: classic
          cache: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.11.0'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install

      - name: Compile Typescript
        run: yarn compile

      - name: Build Electron App
        run: yarn run build:all
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: electron-builds
          path: |
            ./build/vexed-mac.zip
            ./build/vexed-win.zip

      - name: Generate Build Info
        id: var
        run: |
          echo "full_sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
          echo "short_sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

  recreate_release:
    runs-on: ubuntu-latest
    name: Recreate Release
    needs: build_electron
    steps:
      - uses: actions/checkout@v4

      - name: Delete Existing Release
        id: delete_release
        uses: actions/github-script@v6
        with:
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const tag = "nightly";

            // List all releases and find the release by tag
            const releases = await github.rest.repos.listReleases({
              owner: owner,
              repo: repo,
            });

            const release = releases.data.find(release => release.tag_name === tag);

            // Check if the release exists and delete it
            if (release) {
              await github.rest.repos.deleteRelease({
                owner: owner,
                repo: repo,
                release_id: release.id,
              });
              console.log(`Deleted release with ID ${release.id}`);
            } else {
              console.log("No existing release to delete");
            }

            // Delete the tag
            try {
              await github.rest.git.deleteRef({
                owner: owner,
                repo: repo,
                ref: `tags/${tag}`,
              });
              console.log(`Deleted tag ${tag}`);
            } catch (error) {
              console.error(`Error deleting tag: ${error.message}`);
            }

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: electron-builds

      # - name: Rename files
      #   run: |
      #     mv vexed-0.0.0-mac.zip vexed-mac.zip
      #     mv vexed-0.0.0-win.zip vexed-win.zip

      - name: Calculate checksums
        id: checksums
        run: |
          echo "mac_sha=$(sha256sum vexed-mac.zip | awk '{print $1}')" >> $GITHUB_OUTPUT
          echo "win_sha=$(sha256sum vexed-win.zip | awk '{print $1}')" >> $GITHUB_OUTPUT
          echo "current_date=$(date +'%Y-%m-%d %H:%M UTC')" >> $GITHUB_OUTPUT

      - name: Create Nightly Release
        uses: softprops/action-gh-release@v2
        with:
          name: Nightly Build [${{ needs.build_electron.outputs.short_sha }}]
          tag_name: nightly
          body: |
            **This release has been built by Github Actions**
            [Link to build](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

            Last updated: ${{ steps.checksums.outputs.current_date }}

            Build SHA256:
            ```
            macOS: ${{ steps.checksums.outputs.mac_sha }}
            Windows: ${{ steps.checksums.outputs.win_sha }}
            ```

            Full Commit Hash:
            ```
            ${{ needs.build_electron.outputs.full_sha }}
            ```
          files: |
            vexed-mac.zip
            vexed-win.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
